# ConfigMap for Eureka Server properties
apiVersion: v1
kind: ConfigMap
metadata:
  name: eureka-server-config
data:
  # Spring Boot configuration properties
  application.properties: |
    # Application name
    spring.application.name=eureka-server
    
    # Server configuration
    server.port=8761
    
    # Eureka specific configurations
    eureka.client.register-with-eureka=false
    eureka.client.fetch-registry=false
    
    # Actuator endpoints for monitoring
    management.endpoints.web.exposure.include=*
    management.endpoint.health.show-details=always
---
# Eureka Server Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eureka-server
  labels:
    app: eureka-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eureka-server
  template:
    metadata:
      labels:
        app: eureka-server
    spec:
      containers:
      - name: eureka-server
        image: eureka-server:latest # Matches the image built in local-deployment.sh
        imagePullPolicy: Never # For local development
        ports:
        - containerPort: 8761 # Default Eureka port
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8761
          initialDelaySeconds: 20
          periodSeconds: 10
---
# Eureka Server Service
apiVersion: v1
kind: Service
metadata:
  name: eureka-server
spec:
  selector:
    app: eureka-server
  ports:
  - name: http
    protocol: TCP
    port: 8761       # Service port
    targetPort: 8761 # Container port
    nodePort: 30761  # Expose on NodePort for direct access if needed
  type: NodePort # Use NodePort to match local-deployment.sh output, ClusterIP is also common