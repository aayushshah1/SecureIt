# Frontend React Application ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
data:
  nginx.conf: |
    server {
      listen 80;
      root /usr/share/nginx/html;
      index index.html;
      
      # Handle SPA routing
      location / {
        try_files $uri $uri/ /index.html;
      }
      
      # Proxy API requests to the backend services
      location /api/auth/ {
        # Corrected port to 8080 (assuming auth-server service runs on 8080)
        proxy_pass http://auth-server:8080/api/auth/; 
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }
      
      location /api/ {
        proxy_pass http://backend:8080/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }
    }
---
# Frontend React Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  replicas: 1
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: frontend:latest
          imagePullPolicy: Never # For local development
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config-volume # Renamed volumeMount name for clarity
              mountPath: /etc/nginx/conf.d/default.conf # Mount the specific file
              subPath: nginx.conf # Use the key from the ConfigMap
      volumes:
        - name: nginx-config-volume # Renamed volume name
          configMap:
            name: frontend-config
            items: # Specify the file to mount
            - key: nginx.conf
              path: nginx.conf
---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80        # Service port
      targetPort: 80  # Container port
      nodePort: 30080 # Expose on NodePort
  type: NodePort # Use NodePort to match local-deployment.sh output
