spring.application.name=pmbackend
# Database configuration
spring.datasource.url=jdbc:mysql://localhost:3306/password_manager
spring.datasource.username=root
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Server configuration
server.port=8080

# Actuator configuration
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# Eureka client configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true

# Security settings
app.security.encryption.key=${ENCRYPTION_KEY:}
# Note: In production, always provide the ENCRYPTION_KEY through environment variables
# Generate a secure key using   : java -cp . -Djava.security.egd=file:/dev/urandom KeyGenerator

# Password encryption secret
password.encryption.secret=${PASSWORD_ENCRYPTION_SECRET}

# Auth server configuration
auth.server.url=${AUTH_SERVER_URL:http://auth-server:8081}

# Tell lombok to generate getters/setters even with JDK level permission checks
lombok.accessors.chain=true
lombok.addLombokGeneratedAnnotation=true
# Force lombok to process annotations
config.stopBubbling=true
lombok.anyConstructor.addConstructorProperties=true

# Logging configuration
logging.level.com.msaproject.pmbackend=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.springframework.transaction=DEBUG
logging.level.org.springframework.security=INFO